name: Deploy to EC2

on:
  push:
    branches: main

env:
  AWS_REGION: ap-south-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
  SERVER_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, Push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: devops-app
          IMAGE_TAG: ${{ github.sha }}
        run: |-
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Installing Docker to EC2
        env:
          AWS_DEFAULT_REGION: ap-south-1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          script: |-
            sudo apt update
            sudo apt install docker.io -y
            sudo apt install docker-compose -y
            sudo usermod -aG docker ubuntu
            newgrp docker

      - name: SSH into EC2 and deploy
        run: |
          echo "${{ env.PRIVATE_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ env.SERVER_PUBLIC_IP }} << 'EOF'
            echo "<---- Running DevOps App ---->"
            git clone https://github.com/garfield-spst/devops_test.git
            cd devops_test
            sudo docker-compose up -d --build
          EOF


